---
- name: Check SELinux config
  hosts: WebServer:LoadBalancer
  tasks:
  - name: Disable SELinux
    selinux:
     state: disabled
    register: selinuxdisabled

  - name: Reboot if needed
    reboot:
     reboot_timeout: 300
    when: selinuxdisabled.changed

############################################################
- name: Install packages and configure LB
  hosts: LoadBalancer
  tasks:
   - name: Install packages for LBs
     yum:
      name:
      - haproxy
      - keepalived
      state: present

   - name: Add haproxy.xml
     copy:
      src: ./haproxy.xml
      dest: /etc/firewalld/services/haproxy.xml

   - name: Configure firewall
     firewalld:
      service: "{{ item }}"
      permanent: true
      state: enabled
     with_items:
     - haproxy

   - name: Reload firewall
     command: firewall-cmd --reload

   - name: Configure keepalived Master LB
     copy:
      src: "{{ playbook_dir }}/keepalived-master.conf"
      dest: /etc/keepalived/keepalived.conf
     when: inventory_hostname == groups['LoadBalancer'][0]

   - name: Configure keepalived Backup LB
     copy:
      src: "{{ playbook_dir }}/keepalived-backup.conf"
      dest: /etc/keepalived/keepalived.conf
     when: inventory_hostname != groups['LoadBalancer'][0]

   - name: Enable services
     service:
      name: "{{ item }}"
      enabled: yes
      state: restarted
     with_items:
     - keepalived
     - haproxy

   - name: Configure haproxy
     template:
      src: "{{ playbook_dir }}/haproxy.cfg.j2"
      dest: /etc/haproxy/haproxy.cfg

   - name: Enable haproxy service
     service:
      name: haproxy
      enabled: yes
      state: restarted

############################################################
- name: Install packages and configure WS
  hosts: WebServer
  tasks:
   - name: Install packages for WS
     yum:
      name:
       - httpd
      state: present

   - name: Configure firewall for WS
     firewalld:
      service: "{{ item }}"
      permanent: true
      state: enabled
     with_items:
     - http

   - name: Reload firewall
     command: firewall-cmd --reload

   - name: Add index.html
     shell: echo "<h1 style=\"font-family:arial; text-align:center;\"> You got connected to `hostname`.</h1>" > /var/www/html/index.html

   - name: Enable httpd service
     service:
      name: httpd
      enabled: yes
      state: restarted